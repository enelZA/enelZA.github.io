<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
  <title>EnelZA </title>
  <link>http://enelza.github.io/</link>
  <description>Programming, Linux and life.</description>
  <generator>BlazeBlogger 1.2.0</generator>
  <item>
    <title>Reading Atlas Shrugged for the tenth time.</title>
    <link>http://enelza.github.io/2014/11/14-reading-atlas-shrugged-for-the-tenth-time/</link>
    <guid>http://enelza.github.io/2014/11/14-reading-atlas-shrugged-for-the-tenth-time/</guid>
    <pubDate>Fri, 14 Nov 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>The most influential book of all time.</p>

<p><img src="img/b13.jpg" alt="Atlas Shrugged" title=""></p>
    ]]></description>
  </item>
  <item>
    <title>Extract web links from a website using grep and sed</title>
    <link>http://enelza.github.io/2014/08/12-extract-web-links-from-a-website-using-grep-and-sed/</link>
    <guid>http://enelza.github.io/2014/08/12-extract-web-links-from-a-website-using-grep-and-sed/</guid>
    <pubDate>Thu, 21 Aug 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>Create a function called getlinks in your ~/.bashrc</p>

<p>getlinks ()
   {
   wget -q $1 -O - | 
   tr "\t\r\n'" '   "' | 
   grep -i -o '<a[^>]+href[ ]<em>=[ \t]</em>"(ht\|f)tps\?:[^"]+"'| 
   sed -e 's/^.<em>"([^"]+)".</em>$/\1/g'
   }</p>

<p>Run the script with the target website as the parameter.</p>

<pre><code>getlinks http://www.planetsharepoint.org
</code></pre>

<p>The script will fetch all the linked urls on the page.</p>
    ]]></description>
  </item>
  <item>
    <title>Writing Instruments</title>
    <link>http://enelza.github.io/2014/07/13-writing-instruments/</link>
    <guid>http://enelza.github.io/2014/07/13-writing-instruments/</guid>
    <pubDate>Mon, 21 Jul 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>After 3 decades of writing stuff down, I finally decided ot these two writing instruments as my de facto standard.</p>

<h1>Pelikan M150 Fountain Pen</h1>

<p><img src="img/b12_1.jpg" alt="Pelikan" title=""></p>

<h1>Rotring 600 Draftsman Pencil</h1>

<p><img src="img/b12_2.jpg" alt="Pelikan" title=""></p>
    ]]></description>
  </item>
  <item>
    <title>Use Java PlantUMl.jar to create sequence and activity diagrams</title>
    <link>http://enelza.github.io/2014/06/11-use-java-plantumljar-to-create-sequence-and-activity-diagrams/</link>
    <guid>http://enelza.github.io/2014/06/11-use-java-plantumljar-to-create-sequence-and-activity-diagrams/</guid>
    <pubDate>Tue, 03 Jun 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>Download PlantUML from <a href="http://plantuml.sourceforge.net/download.html" title="Download plantuml">sourceforge.net</a></p>

<p>Add the following to a text file</p>

<pre><code>@startuml
|Swimlane1|
start
:foo1;
|#AntiqueWhite|Swimlane2|
:foo2;
:foo3;
|Swimlane1|
:foo4;
|Swimlane2|
:foo5;
stop
@enduml
</code></pre>

<p>Use the plantuml.jar file to generate the swimlane activity diagram.</p>

<pre><code>java -jar plantuml.jar file.txt
</code></pre>

<p><img src="img/b11.jpg" alt="Swimlane" title=""></p>
    ]]></description>
  </item>
  <item>
    <title>Clean out a white board photo</title>
    <link>http://enelza.github.io/2014/05/9-clean-out-a-white-board-photo/</link>
    <guid>http://enelza.github.io/2014/05/9-clean-out-a-white-board-photo/</guid>
    <pubDate>Thu, 22 May 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>Use the following imagemagick convert script</p>

<pre><code>#!/bin/bash
convert $1 -morphology Convolve DoG:15,100,0
-negate -normalize -blur 0x1
-channel RBG -level 60%,91%,0.1 $2
</code></pre>

<p>Before photo</p>

<p><img src="img/b9_1.jpg" alt="Before photo" title=""></p>

<p>After Photo</p>

<p><img src="img/b9_2.jpg" alt="After Photo" title=""></p>
    ]]></description>
  </item>
  <item>
    <title>Install asciiquarium on ubuntu</title>
    <link>http://enelza.github.io/2014/05/10-install-asciiquarium-on-ubuntu/</link>
    <guid>http://enelza.github.io/2014/05/10-install-asciiquarium-on-ubuntu/</guid>
    <pubDate>Mon, 05 May 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>AsciiQuarium is a ncurses text based fish aquarium. </p>

<p><img src="img/b10_1.jpg" alt="Before photo" title=""></p>

<h3>Setup libcurses and term-amimation in perl</h3>

<p>apt-get install libcurses-perl</p>

<p>wget http://search.cpan.org/CPAN/authors/id/K/KB/KBAUCOM/Term-Animation-2.4.tar.gz</p>

<p>tar -zxvf Term-Animation-2.4.tar.gz</p>

<p>cd Term-Animation-2.4/</p>

<p>perl Makefile.PL &amp;&amp;  make &amp;&amp;   make test</p>

<p>make install</p>

<h3>Now install asciiquarium</h3>

<p>wget http://www.robobunny.com/projects/asciiquarium/asciiquarium.tar.gz</p>

<p>tar -zxvf asciiquarium.tar.gz</p>

<p>cd asciiquarium_1.1/</p>

<p>cp asciiquarium /usr/local/bin</p>

<p>chmod 0755 /usr/local/bin/asciiquarium</p>
    ]]></description>
  </item>
  <item>
    <title>All the different linux log files</title>
    <link>http://enelza.github.io/2014/04/8-all-the-different-linux-log-files/</link>
    <guid>http://enelza.github.io/2014/04/8-all-the-different-linux-log-files/</guid>
    <pubDate>Tue, 22 Apr 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<ul>
<li><strong>var/log/messages</strong> Contains global system messages, including the messages that are logged during system startup. There are several things that are logged in /var/log/messages including mail, cron, daemon, kern, auth, etc.</li>
<li><strong>/var/log/dmesg</strong> Contains kernel ring buffer information. When the system boots up, it prints number of messages on the screen that displays information about the hardware devices that the kernel detects during boot process. These messages are available in kernel ring buffer and whenever the new message comes the old message gets overwritten. You can also view the content of this file using the dmesg command.</li>
<li><strong>/var/log/auth.log</strong>  Contains system authorization information, including user logins and authentication machinsm that were used.</li>
<li><strong>/var/log/boot.log</strong>  Contains information that are logged when the system boots</li>
<li><strong>/var/log/daemon.log</strong> ontains information logged by the various background daemons that runs on the system</li>
<li><strong>/var/log/dpkg.log</strong> ontains information that are logged when a package is installed or removed using dpkg command</li>
<li><strong>/var/log/kern.log</strong>Contains information logged by the kernel. Helpful for you to troubleshoot a custom-built kernel.</li>
<li><strong>/var/log/lastlog</strong> Displays the recent login information for all the users. This is not an ascii file. You should use lastlog command to view the content of this file.</li>
<li><strong>/var/log/maillog/var/log/mail.log</strong>  Contains the log information from the mail server that is running on the system. For example, sendmail logs information about all the sent items to this file</li>
<li><strong>/var/log/user.log</strong>  Contains information about all user level logs</li>
<li><strong>/var/log/Xorg.x.log</strong>  Log messages from the X</li>
<li><strong>/var/log/alternatives.log</strong>  Information by the update-alternatives are logged into this log file. On Ubuntu, update-alternatives maintains symbolic links determining def ault commands.</li>
<li><strong>/var/log/btmp</strong> (lastb command; shows all bad login attempts) /var/log/wtmp (displays all users logged in and out since the file is created...last command;login attempts)– This file contains information about failed login attemps. Use the last command to view the btmp file. For example, “last -f /var/log/btmp | more”</li>
<li><strong>/var/log/cups</strong> All printer and printing related log messages</li>
<li><strong>/var/log/anaconda.log</strong>  When you install Linux, all installation related messages are stored in this log file</li>
<li><strong>/var/log/yum.log</strong>  Contains information that are logged when a package is installed using yum</li>
<li><strong>/var/log/cron</strong> Whenever cron daemon(or anacron) starts a cron job, it logs the information about the cron job in this file</li>
<li><strong>/var/log/secure</strong> Contains information related to authentication and authorization privileges. For example, sshd logs all the messages here, including unsuccessful login.</li>
<li><strong>/var/log/wtmp or /var/log/utmp</strong> Contains login records. Using wtmp you can find out who is logged into the system. who command uses this file to display the information.</li>
<li><strong>/var/log/faillog</strong> Contains user failed login attemps. Use faillog command to display the content of this file.
Apart from the above log files, /var/log directory may also contain the following sub-directories depending on the application that is running on your system.</li>
<li><strong>/var/log/httpd/ (or) /var/log/apache2</strong> Contains the apache web server access<em>log and error</em>log</li>
<li><strong>/var/log/lighttpd/</strong> Contains light HTTPD access<em>log and error</em>log</li>
<li><strong>/var/log/conman/</strong> Log files for ConMan client. conman connects remote consoles that are managed by conmand daemon.</li>
<li><strong>/var/log/mail/</strong> This subdirectory contains additional logs from your mail server. For example, sendmail stores the collected mail statistics in /var/log/mail/statistics file</li>
<li><strong>/var/log/prelink/</strong> prelink program modifies shared libraries and linked binaries to speed up the startup process.</li>
<li><strong>/var/log/prelink/prelink.log</strong> contains the information about the .so file that was modified by the prelink.</li>
<li><strong>/var/log/audit/</strong> Contains logs information stored by the Linux audit daemon (auditd).</li>
<li><strong>/var/log/setroubleshoot/</strong> SELinux uses setroubleshootd (SE Trouble Shoot Daemon) to notify about issues in the security context of files, and logs those information in this log file.</li>
<li><strong>/var/log/samba/</strong> Contains log information stored by samba, which is used to connect Windows to Linux.</li>
<li><strong>/var/log/sa/</strong> Contains the daily sar files that are collected by the sysstat package.</li>
<li><strong>/var/log/sssd/</strong> Use by system security services daemon that manage access to remote directories and authentication mechanisms.</li>
</ul>
    ]]></description>
  </item>
  <item>
    <title>Create a PDF calendar for printing</title>
    <link>http://enelza.github.io/2014/03/7-create-a-pdf-calendar-for-printing/</link>
    <guid>http://enelza.github.io/2014/03/7-create-a-pdf-calendar-for-printing/</guid>
    <pubDate>Mon, 03 Mar 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>Install via apt-get</p>

<pre><code>apt-get install pcal
</code></pre>

<p>Use pcal to print a range of monthly calendars</p>

<pre><code>pcal -o April.ps 4 2015 3
</code></pre>

<p>Will print from month 4, three months into the future.</p>

<p>April, May and June</p>
    ]]></description>
  </item>
  <item>
    <title>How to fix corrupted pdf documents</title>
    <link>http://enelza.github.io/2014/02/6-how-to-fix-corrupted-pdf-documents/</link>
    <guid>http://enelza.github.io/2014/02/6-how-to-fix-corrupted-pdf-documents/</guid>
    <pubDate>Tue, 25 Feb 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>Try to convert the pdf document back to postscript</p>

<pre><code>pdf2ps corupt.pdf recovered.ps &amp;&amp; psp2df recovered.ps recovered.pdf
</code></pre>

<p>If that does not work, try the pdf2cairo application</p>

<p>pdftocairo -pdf corupted.pdf new.pdf</p>
    ]]></description>
  </item>
  <item>
    <title>Colorize log files using ccze tool</title>
    <link>http://enelza.github.io/2014/02/5-colorize-log-files-using-ccze-tool/</link>
    <guid>http://enelza.github.io/2014/02/5-colorize-log-files-using-ccze-tool/</guid>
    <pubDate>Sat, 15 Feb 2014 00:00:01 GMT</pubDate>
    <description><![CDATA[<p>Install via apt-get</p>

<pre><code>    sudo apt-get install ccze -y
</code></pre>

<p>Display log files</p>

<pre><code>    tail /var/log/syslog | ccze -A
</code></pre>

<p>Export log files to color html</p>

<pre><code>   cat /var/log/syslog | ccze -h &gt; ~/Desktop/syslog.html
</code></pre>
    ]]></description>
  </item>
</channel>
</rss>